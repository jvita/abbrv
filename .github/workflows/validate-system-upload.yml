name: Validate System Upload

on:
  issues:
    types: [opened]

jobs:
  validate-upload:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.issue.labels.*.name, 'system upload') &&
      (contains(github.event.issue.body, 'http') || contains(github.event.issue.body, 'base64'))
    
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Fetch issue body content
        run: |
          ISSUE_BODY="${{ github.event.issue.body }}"
          echo "$ISSUE_BODY" > issue_body.txt

      - name: Extract File URLs or Base64 Data from Issue Body
        run: |
          ISSUE_BODY=$(cat issue_body.txt)
          FILE_URLS=$(echo "$ISSUE_BODY" | grep -Eo 'https://github\.com/.+/files/[a-zA-Z0-9_.-]+')
          if [[ -z "$FILE_URLS" ]]; then
            BASE64_FILES=$(echo "$ISSUE_BODY" | grep -Eo 'data:application/json;base64,[A-Za-z0-9+/=]+')
            if [[ -z "$BASE64_FILES" ]]; then
              echo "❌ No file URLs or base64-encoded files found in the issue body."
              exit 1
            fi
          fi
          echo "$FILE_URLS" > file_urls.txt
          echo "$BASE64_FILES" > base64_files.txt

      - name: Create json_files directory
        run: |
          mkdir -p json_files

      - name: Download JSON Files
        run: |
          for FILE_URL in $(cat file_urls.txt); do
            FILE_NAME=$(basename "$FILE_URL")
            echo "Downloading $FILE_URL"
            curl -o "json_files/$FILE_NAME" "$FILE_URL"
          done

      - name: Validate JSON Files
        run: |
          ls -l json_files/

          if [ ! -f ".github/scripts/validate_json.py" ]; then
            echo "❌ validate_json.py not found!"
            exit 1
          fi
          python3 .github/scripts/validate_json.py json_files/*.json

      - name: Clean up
        run: |
          rm -f json_files/*.json

      - name: Post result to issue comment
        run: |
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          REPO="${{ github.repository }}"
          RESULT=$(cat result.txt)
          COMMENT_BODY="### Validation Results\n\n$RESULT"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"body\": \"$COMMENT_BODY\"}" \
            "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/comments"
